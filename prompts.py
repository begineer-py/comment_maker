"""
提示詞模板文件
包含用於代碼註釋的各種提示詞模板
"""

def get_line_end_comment_prompt(code):
    """獲取行尾註釋的提示詞模板"""
    return f"""
    請為以下Python代碼添加中文註釋。
    
    重要規則：
    1. 只使用行尾註釋，即在代碼行後面添加 # 後跟註釋內容
    2. 不要添加行前註釋，避免縮進錯誤
    3. 不要修改原始代碼的任何部分，包括空行和縮進
    4. 對於已有註釋的行，保持原樣不變
    5. 註釋應簡潔明了地解釋該行代碼的功能
    6. 空行不需要添加註釋
    
    示例：
    ```python
    def hello(name):  # 定義一個打招呼的函數，接收name參數
        greeting = "Hello, " + name  # 創建問候語字符串
        return greeting  # 返回問候語
    ```
    
    代碼:
    ```python
    {code}
    ```
    
    請返回帶有行尾註釋的完整代碼。
    """

def get_line_start_comment_prompt(code):
    """獲取行前註釋的提示詞模板"""
    return f"""
    請為以下Python代碼添加逐行中文註釋。
    
    重要規則：
    1. 在每行代碼前添加註釋，使用 # 開頭
    2. 保持與代碼相同的縮進級別，確保註釋和代碼對齊
    3. 不要修改原始代碼的任何部分
    4. 對於已有註釋的行，保持原樣不變
    5. 註釋應簡潔明了地解釋該行代碼的功能
    6. 空行不需要添加註釋
    
    示例：
    ```python
    # 定義一個打招呼的函數，接收name參數
    def hello(name):
        # 創建問候語字符串
        greeting = "Hello, " + name
        # 返回問候語
        return greeting
    ```
    
    代碼:
    ```python
    {code}
    ```
    
    請返回帶有行前註釋的完整代碼。
    """

def get_prompt_for_style(code, style='line_end', file_name=None):
    """根據註釋風格獲取提示詞
    
    Args:
        code: 代碼內容
        style: 註釋風格，'line_end'或'line_start'
        file_name: 文件名
        
    Returns:
        str: 提示詞
    """
    # 添加文件名信息
    file_info = ""
    if file_name:
        file_info = f"文件名: {file_name}\n"
    
    if style == 'line_end':
        return f"""你是一位專業的代碼註釋專家，精通各種程式語言。
{file_info}
請為以下代碼的每一行添加簡潔明了的中文註釋。註釋應該放在每行代碼的末尾。
請根據代碼自動判斷程式語言，並使用該語言的正確註釋符號。
註釋應該解釋代碼的功能和目的，而不僅僅是翻譯代碼。
對於空行或者已經有註釋的行，請保持原樣。
對於較長的代碼行，請確保註釋簡潔，不要使行變得過長。

請遵循以下格式規則：
1. 自動識別代碼語言，並使用適當的註釋符號（如Python使用#，JavaScript使用//等）
2. 在代碼行末尾添加註釋，格式為"代碼 # 註釋"（根據語言使用相應的註釋符號）
3. 保持原始代碼的縮進和格式
4. 不要修改原始代碼
5. 不要添加額外的解釋或說明，只返回帶註釋的代碼
6. 對於複雜的函數或類，可以在定義行添加簡短的功能說明

以下是需要添加註釋的代碼：

```
{code}
```

請直接返回帶有行尾註釋的完整代碼，不要有任何額外的解釋。"""
    else:  # line_start
        return f"""你是一位專業的代碼註釋專家，精通各種程式語言。
{file_info}
請為以下代碼的每一個代碼塊添加簡潔明了的中文註釋。註釋應該放在代碼行的前面。
請根據代碼自動判斷程式語言，並使用該語言的正確註釋符號。
註釋應該解釋代碼的功能和目的，而不僅僅是翻譯代碼。
對於空行或者已經有註釋的行，請保持原樣。

請遵循以下格式規則：
1. 自動識別代碼語言，並使用適當的註釋符號（如Python使用#，JavaScript使用//等）
2. 在代碼行前面添加註釋，與代碼保持相同的縮進級別
3. 保持原始代碼的縮進和格式
4. 不要修改原始代碼
5. 不要添加額外的解釋或說明，只返回帶註釋的代碼
6. 對於函數、類或方法，添加更詳細的註釋說明其功能、參數和返回值

以下是需要添加註釋的代碼：

```
{code}
```

請直接返回帶有行前註釋的完整代碼，不要有任何額外的解釋。""" 